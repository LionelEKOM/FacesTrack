# Generated by Django 4.2.11 on 2025-08-24 12:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('ENSEIGNANT', 'Enseignant'), ('ELEVE', 'Élève'), ('PARENT', 'Parent')], default='ELEVE', max_length=20)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('adresse', models.TextField(blank=True)),
                ('telephone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('6A', '6ème A'), ('6B', '6ème B'), ('5A', '5ème A'), ('5B', '5ème B'), ('4A', '4ème A'), ('4B', '4ème B'), ('3A', '3ème A'), ('3B', '3ème B'), ('2ND', '2nde'), ('1ERE', '1ère'), ('TLE', 'Terminale')], max_length=10)),
                ('cycle', models.CharField(choices=[('PREMIER', 'Premier cycle (6ème → 3ème)'), ('SECOND', 'Second cycle (2nde → Tle)')], default='PREMIER', max_length=10)),
                ('annee_scolaire', models.CharField(blank=True, max_length=9, null=True)),
                ('capacite', models.IntegerField(default=30)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('salle', models.CharField(blank=True, max_length=20)),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('EN_COURS', 'En cours'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé')], default='PLANIFIE', max_length=20)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(editable=False, max_length=30, unique=True)),
                ('photo_reference', models.ImageField(blank=True, null=True, upload_to='photos_eleves/')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_embauche', models.DateField()),
                ('specialite', models.CharField(blank=True, max_length=100)),
                ('classes', models.ManyToManyField(to='school.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code', models.CharField(editable=False, max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('coefficient', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='SessionAppel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_debut', models.DateTimeField(auto_now_add=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé')], default='EN_COURS', max_length=20)),
                ('methode', models.CharField(choices=[('FACIAL', 'Reconnaissance faciale'), ('MANUEL', 'Manuel'), ('MIXTE', 'Mixte')], default='FACIAL', max_length=20)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.cours')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photos_reference/')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('qualite', models.FloatField(default=0.8, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('active', models.BooleanField(default=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(blank=True, max_length=100)),
                ('lieu_travail', models.CharField(blank=True, max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('ABSENCE', 'Absence'), ('RETARD', 'Retard'), ('PRESENCE', 'Présence'), ('SYSTEME', 'Système')], max_length=20)),
                ('titre', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('lu', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_lecture', models.DateTimeField(blank=True, null=True)),
                ('lien', models.CharField(blank=True, max_length=200)),
                ('destinataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='enseignant',
            name='matieres',
            field=models.ManyToManyField(to='school.matiere'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eleve',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.parent'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cours',
            name='enseignant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.enseignant'),
        ),
        migrations.AddField(
            model_name='cours',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.matiere'),
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('PRESENT', 'Présent'), ('ABSENT', 'Absent'), ('RETARD', 'Retard'), ('JUSTIFIE', 'Justifié')], default='ABSENT', max_length=20)),
                ('heure_arrivee', models.TimeField(blank=True, null=True)),
                ('methode_detection', models.CharField(choices=[('FACIAL', 'Reconnaissance faciale'), ('MANUEL', 'Manuel'), ('QR_CODE', 'QR Code')], default='MANUEL', max_length=20)),
                ('niveau_confiance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('photo_capture', models.ImageField(blank=True, null=True, upload_to='captures_presence/')),
                ('commentaire', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.eleve')),
                ('session_appel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.sessionappel')),
            ],
            options={
                'unique_together': {('session_appel', 'eleve')},
            },
        ),
        migrations.CreateModel(
            name='HistoriquePresence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('PRESENT', 'Présent'), ('ABSENT', 'Absent'), ('RETARD', 'Retard'), ('JUSTIFIE', 'Justifié')], max_length=20)),
                ('date', models.DateField()),
                ('heure_arrivee', models.TimeField(blank=True, null=True)),
                ('methode_detection', models.CharField(choices=[('FACIAL', 'Reconnaissance faciale'), ('MANUEL', 'Manuel'), ('QR_CODE', 'QR Code')], max_length=20)),
                ('commentaire', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.cours')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.eleve')),
            ],
            options={
                'unique_together': {('eleve', 'cours', 'date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='cours',
            unique_together={('classe', 'date', 'heure_debut')},
        ),
    ]
